**********************************************************************************************
 
Apollo4 Rev B1/B2 Beta Release on June 14 2021 (revision b0-release-20210111-1514-g6a1d4008b7)
 
**********************************************************************************************
----------------------------------------------------------------------------------------------
Summary of Changes and Customer Impacts
----------------------------------------------------------------------------------------------
* BLE Firmware Updated from V1.13 to V1.14 (see the BLE Host Update.txt in the /docs/releasenotes folder).
  Fixed potential packet loss issue for traffic from Apollo4 to BLE controller over HCI/SPI interface. 
  Fixed BLE connection supervision timeout with some phone models. Put a min/max limit on trim slope which
  might not be programmed properly during ATE. Corrected RSSI value. Fixed re-initialization of Local 
  Resolvable Private Address (RPA) random number generation Linear Feedback Shift Register (LFSR) after 
  wakeup from sleep.  The customer impact of this change is both increased reliability and a reduction of 
  ~4-7% power consumption for 500ms advertising interval and ~6-20% for 500ms connection interval compared
  to v1.13.
 
* BLE Firmware Updated from V1.14 to V1.15 (see the BLE Host Update.txt in the /docs/releasenotes folder).
  Increase the lowest DCDC voltage to address BLE controllerâ€™s failure to wake up on some Apollo4Blue Rev B 
  parts when VDDB is supplied with 1.8V.  The customer impact of this change is both increased reliability
  and a slight increase of ~1% power consumption for 500ms advertising interval and ~2-3% for 500ms connection 
  interval compared to v1.14.
  
* Updated the Graphics subsystem to the latest NemaGFX SDK.  There is no impact to customer applications.

* Trim and power optimizations (see am_hal_pwrctrl.*) designed to provide better functional stability across 
  a range of supply voltages. On RevB1 parts the changes show a 5.1% improvement in Coremark power and a 3.3%
  increase in Deepsleep power. On RevB2+ parts the changes show a 10.4% improvement in Coremark power and a 4.6%
  increase in Deepsleep power. Note there is also an additional delay of 20usec in am_hal_sysctrl_sleep if the 
  AM_HAL_PWRCTL_BOOST_VDDC define is enabled (and AM_HAL_PWRCTL_KEEP_ANA_ACTIVE_IN_DS is disabled). Both 
  of these are disabled by default in SDK.

* The release adds a SW Workaround to am_hal_sysctrl_sleep to prevent MCU hang when an asynchronous interrupt 
  occurs soon after entering deepsleep.  The customer impact is an additional 1usec delay when coming out of 
  deepsleep.
  
* Improved DAXI coherency management in the HAL and updated examples to demonstrate the proper techniques for
  application code to manage the DAXI buffers.  This includes updates to the CMDQ, GFX, IOM, MSPI, SECURITY,
  SYSCTRL (sleep), and SDIO HAL implementations.  DAXI changes to I2S HAL are still pending. The customer
  impact of these changes will add some delays to the start/finish of DMA transfers, as well as entry into 
  sleep (both normal and deepsleep).

* Changed the default DAXI configuration to reduce the number buffers (1) and flush level (0).  These new
  defaults are recommended.  The customer may set the AGINGCOUNTER value to optimize their workload.
  The customer impact is a trade-off between complexity of maintaining DAXI coherency in SW and overall
  memory subsystem performance.  
  
----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------
\boards\apollo4b_bga_evb\examples\power\coremark\src\core_portme.c
*    The SRAM usage has been optimized within the 8K of DTCM.

\devices/am_devices_cooper.*
\third_party/cordio/ble-host/sources/hci/ambiq/cooper/hci_drv_cooper.c
*    Fixed bug of sending empty packet in the end of AM_DEVICES_COOPER_SBL_UPDATE_STATE_DATA
*    Change to support interrupt base mechanism for Cooper (see BLE Host Update.txt for details).
*    Removed unused HCI vendor specific commands.
*    Clear the Cooper image signature if Apollo4 has no available image/patch for Cooper to load.

\devices\am_devices_nemadc_rm67162.*
*    Added APIs for single frame support.

\devices\am_devices_mspi_psram_aps12808l.*
*    Updated to support receive fine timing scan on MSPI.

\devices\am_devices_mspi_atxp032.c
*    Updated to support receive fine timing scan on MSPI.
*    Improvements to support 96MHz operation.

\mcu\apollo4b\hal\am_hal_gpio.*
*    Added default configuration am_hal_gpio_pincfg_pulledup_disabled.

\mcu\apollo4b\hal\am_hal_i2s.c
*    Changed I2S serial audio format to specify a frame period of 2x WDLEN1 cycles.

\mcu\apollo4b\hal\am_hal_pwrctrl.*
*    Optimized SIMOBUCK trim, Analog trims, and voltage settings designed to provide more reliable
     operation.  Some of the changes will increase the overall power usage of the device and thus
     are optional. See #defines and comments in am_hal_pwrctrl.h:
       - AM_HAL_PWRCTL_BOOST_VDDF_FOR_BOTH_LP_HP
       - AM_HAL_PWRCTL_KEEP_ANA_ACTIVE_IN_DS
       - AM_HAL_PWRCTL_SHORT_VDDF_TO_VDDS
       - AM_HAL_PWRCTL_BOOST_VDDC
*    Changed the default g_DefaultDSPMemCfg to disable cache.
*    Added optional optimization to allow the am_hal_pwrctrl_peripheral_control table to be built
     in RAM instead of MRAM.  See #define AM_HAL_PWRCTRL_RAM_TABLE.
     
\mcu\apollo4b\hal\am_hal_stimer.*
*    Added SW workaround for issue with loading SCMPR registers.

\mcu\apollo4b\hal\am_hal_security.c
*    Updates to support DAXI coherency management in SECURITY HAL.

\mcu\apollo4b\hal\am_hal_usb.c
*    Fixed defect with EP0 setup request error handling.
     
\mcu\apollo4b\hal\mcu\am_hal_cachectrl.*
*    Updates to DAXI HAL to support coherency management.
*    Changed the deault DAXI configuration.

\mcu\apollo4b\hal\mcu\am_hal_card.*
*    Added SDIO TX/RX delay setting function

\mcu\apollo4b\hal\mcu\am_hal_cmdq.c
*    Updates to support DAXI coherency management in CMDQ HAL.
*    Added support for new compile flag AM_HAL_CMDQ_RAM_TABLE, which if defined will trade off runtime performance with code size.

\mcu\apollo4b\hal\mcu\am_hal_dsi.c
*    Updated dsi init, napping and wakeup functions.

\mcu\apollo4b\hal\mcu\am_hal_iom.c
*    Update IOM HAL to handle cleanup when encountering ARB error.
*    Updates to support DAXI coherency management in IOM HAL.

\mcu\apollo4b\hal\mcu\am_hal_mcuctrl.*
*    Improved the AM_HAL_MCUCTRL_CONTROL_EXTCLK32M_KICK_START and AM_HAL_MCUCTRL_CONTROL_EXTCLK32M_NORMAL
     settings for BLE controller to allow the clock efficiently to stablized with the required accuracy.

\mcu\apollo4b\hal\mcu\am_hal_mram.c
*    Fix the function program_mram_tmc_tcycrd() which was incorrectly implemented.
*    Added extern int am_hal_mram_ds_init(void).

\mcu\apollo4b\hal\mcu\am_hal_mspi.*
*    Updated am_hal_mspi_control AM_HAL_MSPI_REQ_DQS to parameterize more of the MSPI fine delay settings.
*    Updated am_hal_mspi_dqs_t to support additional timing scan parameters.
*    Updates to support DAXI coherency management in MSPI HAL.
*    Added support for am_hal_mspi_control AM_HAL_MSPI_REQ_SET_INSTR_ADDR_LEN option.
*    Added settings of DDR emulation setting in the am_hal_mspi_configure. 

\mcu\apollo4b\hal\mcu\am_hal_reset.c
*    Change the logic to get the ResetStatus depending on SBL version, which changes with SBLv6 onwards.
*    Using STIMER->SNVR3 to persistently save the reset status.

\mcu\apollo4b\hal\mcu\am_hal_sdhc.c
*    Added SDIO TX/RX delay setting function
*    Updates to support DAXI coherency management in SDIO HAL.

\mcu\apollo4b\hal\mcu\am_hal_card_host.*
*    Added SDIO TX/RX delay setting function

\mcu\apollo4b\hal\mcu\am_hal_sysctrl.*
*    Updates to support DAXI coherency management in SYSCTRL HAL.
*    SW Workaround to prevent MCU hang when an asynchronous interrupt occurs soon after entering deepsleep.
     This is causing SIMOBUCK not to come out of LP mode.
*    Added conditional compile with !AM_HAL_PWRCTL_KEEP_ANA_ACTIVE_IN_DS to remove and return the VDDC boost
     calculated by PWRCTRL HAL.

\third_party\ThinkSi\NemaGFX_SDK\
*    Updated the Graphics subsystem to the latest NemaGFX SDK.

\third_party\ThinkSi\config\apollo4b_nemagfx\nema_hal.c
*    Updates to support DAXI coherency management in DC HAL.

\utils\am_util_id.c
*    Update am_util_id to do a minimum build based on the AM_PART_APOLLOxx conditional. It can also be made
     to build for all devices by defining the AM_ID_APOLLO_ALL conditional (in am_util_id.h).

**********************************************************************************************
 
Apollo4 Rev B0/B1/B2 Beta Release on March 30th 2021 (revision b0-release-20210111-833-gc25608de46)
 
**********************************************************************************************
----------------------------------------------------------------------------------------------
Summary
----------------------------------------------------------------------------------------------
Support for Apollo4 EVB (apollo4b_bga_evb) and Apollo4Blue EVB (apollo4b_sip_evb)

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------
\boards\apollo4b_bga_evb\examples\power\coremark\src\core_portme.c
*    The SRAM usage has been temporarily bumped up on the coremark example requiring it to be configured to the
     next size of DTCM which is 128K.  This will require additional power in the example, but will
     be optimized in the future to fall back within the 8K of DTCM.
     
\devices\am_devices_cooper.c
*    Updates to improve error checking for Cooper image updates.

\devices\am_devices_dsi_rm67162.c
*    Updates to support Rev B2 DSI fixes.

\devices\am_devices_mspi_atxp032.c
*    Updated am_devices_mspi_atxp032.c to bump the datarate down to 48MHz for all command reads/writes.  There is a limitation on 
     some of the commands, so we will enforce it on all of them.

\mcu\apollo4b\hal\am_hal_adc.c
*    Code clean-up and register updates.

\mcu\apollo4b\hal\mcu\am_hal_dsi.c
*    Updated ULPS setting sequences.

\mcu\apollo4b\hal\mcu\am_hal_mspi.c
*    Updates to support 96MHz DDR operation with Ambiq Apollo4 EB boards.

\mcu\apollo4b\hal\am_hal_pwrctrl.*
\mcu\apollo4b\hal\mcu\am_hal_sysctrl.c
*    Implement the VDDC trim boost to increase the MSPI DQS RX timing adjustment window for improved interface timing margin in
     both SIMOBUCK and LDO modes.
*    Fixed defect in am_hal_pwrctrl_periph_enable/disable.
*    Fixed critical section handling in WFI/Timer workaround.
*    Added DAXI buffer flush handling prior to WFI.


\tools\apollo4b_scripts\
*    Misc updates to the Tools for OTA image generation and samples"
â€‹
\tools\apollo4b_scripts\sbl_updates\sbl_ap4b_v5_rc0
*    Please see the history.txt in this directory for details.  Ambiq recommends upgrading for all Rev B0 and B1 parts.

**********************************************************************************************
 
Apollo4 Rev B0/B1/B2 Alpha Release on  March 16 2021 (revision b0-release-20210111-731-g7d50f2291)
 
**********************************************************************************************
----------------------------------------------------------------------------------------------
Summary
----------------------------------------------------------------------------------------------
ADC Sample Correction SW Workaround.

Updates to TIMER HAL to prevent usage of TIMER13 by customer and to provide a HAL API to clear the timer without re-starting it.

PDM XTAL not output during Deepsleep SW Workaround.

Disable LFRC trim power optimization impacting LFRC timing.

Disable DAXI Clock Gating in am_hal_pwrctrl_low_power_init.

USB SRAM Trim updates.

MRAM/CRYPTO Interaction SW Workaround (ERR052).â€‹

Added support to control HFRC2 to the CLKGEN HAL.â€‹

I2S0 ASRC usages will return an error.â€‹

Added DAXI HAL for configuration and control.

----------------------------------------------------------------------------------------------
New Examples
----------------------------------------------------------------------------------------------
\boards\apollo4b_eb\examples\graphics\nemadc_darkening_effect
*    This example demonstrates how to implement pull-down menu and darkening effects with DC.
     This example only supports MIPI DSI interface.

\boards\apollo4b_eb\examples\graphics\nemadc_scrolling_effect
*    This example demonstrates how to implement scrolling effect with DC.
     This example only supports MIPI DSI interface.

\boards\apollo4b_eb\examples\interfaces\iom_psram
*    This example demonstrates IOM usage with the APS6404L PSRAM.

\boards\apollo4b_eb\examples\interfaces\mspi_octal_example_fifo_full
*    This example demonstrates how to detect the MSPI FIFO Full condition in an application.

\boards\apollo4b_eb\examples\peripherals\adc_vbatt
*    This example demonstrates ADC sampling VBATT voltage divider, BATT load, and temperature.
     The example can be modified to disable the ADC Sample Error Correction SW Workaround to
     show the performance difference.

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\boards\apollo4b_eb\bsp\am_bsp.*
*    Enabled SIMOBUCK by default for Apollo4 EBs.
*    Updates to BSP print initialization to have a return value, to allow for a check to ensure ITM SWO 
     prints can be safely enabled.

\devices\am_devices_cooper.c
*    Optimized cooper patch method
*    Defect fix for am_devices_cooper_crystal_trim_set function.
*    Updated to support non-polling mechanism for Cooper.
*    Defect fix for Cooper empty packet bug.

\devices\am_devices_dsi_rm67162.*
*    Moved TE interrupt enabling out of nemadc_wait_te.
*    Optimized dsi_sen_frame_single APIs.
*    Optimized code.
*    Updates to support B2 silicon.

\mcu\apollo4b\hal\am_hal_adc.*
\mcu\apollo4b\regs\am_mcu_apollo4b_info1.h
*    Updated to support the ADC sample correction SW workaround.

\mcu\apollo4b\hal\mcu\am_hal_cachectrl.*
*    Added DAXI configuration and control HAL APIs.  

\mcu\apollo4b\hal\am_hal_i2s.c
*    Added error checking for Rev B1.  I2S0 cannot use ASRC on REVB1.

\mcu\apollo4b\hal\am_hal_otp.c
*    Adding OTP workaround to HAL to avoid running OTP operations from MRAM.
*    Updated am_hal_otp_write_word.  OTP writes are only 0 to 1 - so if some bits were already set, 
     readback may not exactly match. OTP Writes require Critical section, and can take in order of 40-50us.

\mcu\apollo4b\hal\am_hal_pwrctrl.*
*    Update the code to use common StoreWFI workaround running from TCM for both HPLP and Crypto issue
*    New util function to run from TCM - to be run for Crypto. Power transitions for Crypto require a 
     critical section, and takes 16-17us in each direction. Additionally, the application needs to ensure 
     that there are no other masters (CRC, DMA, GPU etc) are accessing MRAM during Crypto On/Off, or 
     Info/OTP access.
*    Remove from am_hal_pwrctrl_low_power_innit() the SIMOBUCK enable, CRYPTO
     disable, all peripheral disabling, all memory minimizing operations (these
     have been moved to am_hal_pwrctrl_control() as special controls).
*    Remove the peripheral disables from am_hal_pwrctrl_low_power_init().
*    Added calls to new DAXI configuration functions in am_hal_pwrctrl_low_power_init.
*    Fixed a defect where INFO1 was being read directly instead of using MRAM HAL function.

\mcu\apollo4b\hal\am_hal_timer.*
*    Modified TIMER restrictions to exclude TIMER13 from general usage due to its dedication to HP/LP 
     and MRAM/CRYPTO SW workarounds.
*    Modified am_hal_timer_disable, am_hal_timer_disable_sync, and am_hal_timer_stop to not enable AUXEN, 
     which reduces power consumption.
*    Added am_hal_timer_clear_stop which leaves the TIMER disabled after clearing it.
*    Updates to support B2 silicon.

\mcu\apollo4b\hal\am_hal_usb.c
*    Add proper settings of the USB SRAM trim values.
*    Fixed defect int the OUT EP count register usage.

\mcu\apollo4b\hal\mcu\am_hal_clkgen.*
*    Add API to support HFRC2 Adjust enable/disable and HFRC2 start/stop.
*    Modified AM_HAL_CLKGEN_CONTROL_PLLCLKSEL_HFRC24 to AM_HAL_CLKGEN_CONTROL_PLLCLKSEL_HFRC6.

\mcu\apollo4b\hal\mcu\am_hal_dsi.h
*    Updated enum am_hal_dsi_freq_trim_e.

\mcu\apollo4b\hal\mcu\am_hal_ios.c
*    Removed redundant power control call for ios

\mcu\apollo4b\hal\mcu\am_hal_mcuctrl.h
*    Added APOLLO4_B2 macro in preparation for Rev B2 release.

\mcu\apollo4b\hal\mcu\am_hal_mram.c
*    Do the INFO reads from within critical section to avoid context switches
*    info read to use BootROM helper

\mcu\apollo4b\hal\mcu\am_hal_sdhc.c
*    Add SDIO clock source gating in am_hal_sdhc_power_control()

\mcu\apollo4b\hal\mcu\am_hal_secure_ota.h
*    New bit allocated for SBL OTA indication for Wired update

\mcu\apollo4b\hal\mcu\am_hal_sysctrl.c
*    If Crypto is On - we need to ensure that MRAM is kept ON during deepsleep.

\third_party\cordio\ble-host\sources\hci\ambiq\cooper\hci_drv_cooper.c
*    Fixed issue by disabling Cooper's IRQ interrupt during hci write. Interrupt status might get 
     accidentally cleared by HciDrvEnableIRQ() after returning from hci write. Removed the calls 
     for now.

**********************************************************************************************
 
Apollo4 Rev B0/B1 Alpha Release on February 8 2021 (revision b0-release-20210111-375-gc3201eeb4)
 
**********************************************************************************************
----------------------------------------------------------------------------------------------
General
----------------------------------------------------------------------------------------------

Updated the drivers/examples to ensure the highest priority (0) ARM interrupt is reserved for 
Ambiq HAL internal use, and should not be used for anything else.
 
----------------------------------------------------------------------------------------------
New Examples
----------------------------------------------------------------------------------------------

\boards\apollo4b_eb\examples\crypto\rsa_sign_verify 
This example demonstrates the use of runtime Crypto library to access hardware acceleration.
*    Added changes to demonstrate dynamic power control of hardware Crypto for power saving

\boards\apollo4b_eb\examples\audio\audadc_rtt_stream
This example demonstrates the use of AUDADC module in the Apollo4 MCU and streams the audio 
collected to PC through SEGGER RTT channel.

\boards\apollo4b_eb\examples\graphics\dbi2dsi_scrolling_effect 
This example demonstrates how to implement scrolling effect with DC and DSI.

\boards\apollo4b_eb\examples\graphics\dsi_rw_command
This example demonstrates how to read and write RM67162 display registers with DSI.

\boards\apollo4b_eb\examples\graphics\nemagfx_performance_test
This example puts textures and/or frame-buffers at PSRAM and runs various baseline tests of 
GPU including blit, blending, scaling, rotating, and combination of scaling and rotating etc.
You 
\boards\apollo4b_eb\examples\interfaces\mpu_mspi_ddr_octal_psram_example
This example demonstrates how to use MPU as workaround for Extended (DSP0/1) RAM issue.

\boards\apollo4b_eb\examples\usb\tinyusb_cdc_dual_ports
This example demonstrates two USB CDC-ACM COM ports. it will echo back the input from one 
terminal and also send the input to another terminal.

\boards\apollo4b_eb\examples\usb\tinyusb_cdc_msc
This example demonstrates a composite USB device including one USB CDC-ACM and one mass storage 
device. the COM port will echo back the input from the terminal and the mass storage device will 
be disk when connecting to other OS like Windows and Linux.

\boards\apollo4b_eb\examples\usb\tinyusb_cdc_msc_freertos
This example demonstrates a composite USB device including one USB CDC-ACM and one mass storage device. 
The COM port will echo back the input from the terminal and the mass storage device will be disk when 
connecting to other OS like Windows and Linux. The CDC-ACM and Mass storage functions will be handled 
by two separate FreeRTOS tasks.

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\boards\apollo4b_eb\examples\ble\ble_freertos_throughput
*    Observed stalled traffic after some time up to 8 hours during longevity testing on Apollo4 
     Rev B1 parts.  Issue is under investigation.

\boards\apollo4b_eb\examples\power\coremark
*    Coremark example is showing ~80uA of additional power when compared to the best results based
     on Validation measurements.  This is due to a missing call in am_hal_pwrctrl_mcu_memory_config
     in core_portme.c file. To fix it in the release add the following snippet beginning at line 189 
     (between the SRAMMemCfg declaration and the comment "Configure the cache").
     
    am_hal_pwrctrl_mcu_memory_config_t McuMemCfg =
    {
      .eCacheCfg    = AM_HAL_PWRCTRL_CACHE_ALL,
      .bRetainCache = false,
      .eDTCMCfg     = AM_HAL_PWRCTRL_DTCM_8K,
      .eRetainDTCM  = AM_HAL_PWRCTRL_DTCM_8K,
      .bEnableNVM0  = true,
      .bRetainNVM0  = true
    };

    am_hal_pwrctrl_mcu_memory_config(&McuMemCfg);
     
\devices\am_devices_mspi_atxp032.c
*    Fixed an issue in ATXP032 driver which may cause mspi mode switch issue.
*    Added changes to demonstrate the MSPI FIFO Full SW workaround.
 
\devices\am_devices_cooper.c
\third_party\cordio\ble-host\sources\hci\ambiq\cooper\hci_drv_cooper.c
*    Updated interrupt priorities for Apollo4B HP/LP SW workaround.
*    Corrected wrong gpio toggle for clock req pin from Cooper
*    Optimized Cooper software to avoid storming IOM bus with interrupts.
*    Enabled nonblocking transaction for cooper
*    Added debug log for SBL driver, disabled by default.
*    Applied am_hal_gpio_intdir_toggle in hci driver
 
\devices\am_devices_mspi_psram_aps6404l.c
*    Added changes to demonstrate the MSPI FIFO Full SW workaround.
*    Updated the APS6404L driver to deal with TURNAROUND for 96MHZ properly.
*    Modified DMATimeLimit setting in aps6404l driver, as measured, tCEM is about 3.7ms by current settings,
 
\devices\am_devices_dsi_rm67162.c
*    Optimized code in devices/am_devices_dsi_rm67162.c.
*    Updated DC primary clock divider in am_devices_dsi_rm67162_init.
*    Updated scanline for TE.
*    remove warrnings
 
\mcu\apollo4b\hal\mcu\am_hal_card.c
\mcu\apollo4b\hal\mcu\am_hal_card_host.c
\mcu\apollo4b\hal\mcu\am_hal_sdhc.c
*    Added CMD23 support
*    Fixed some warnings.
*    Added SDIO power savings
*    Enlarge the CMD6 mode switch check busy timeout.
*    Added the CMD19 workaround after SDHC wakeup
*    Enlarged the xfer timeout to 40ms
*    Check xfer completion more frequently for better performance
*    Delay to disable the SDCLK if cmd needs to check busy status
 
\mcu\apollo4b\hal\mcu\am_hal_dsi.c
*    Added ULPS functions which support Twakeup to DSI HAL.
*    Updated DSI HAL to fix bugs and optimize power consumption.
*    Updated dsi napping and wakeup functions.
 
\mcu\apollo4b\hal\mcu\am_hal_iom.c
*    Updated 1MHz I2C settings to increase reliability of transactions.
*    Updated Power save/restore operations to sequence the SUBMODCTL manipulation.
*    Updated IOM I2C max transaction from 255 to 4095.
 
\mcu\apollo4b\hal\mcu\am_hal_mspi.c
*    Added support for the MSPI FIFO Full SW workaround (Errata number is pending).
*    The MSPI FIFO Full SW workaround necessarily restricts the number of outstanding non-blocking transfers to 
     only a single transfer.  This is due to the need to read the MSPI INTSTAT after every transfer is completed.

\mcu\apollo4b\hal\am_hal_pin.*
*    Regenerate the Apollo4b am_hal_pin.c/.h files to capture the latest function definitions for Rev B.
    
\mcu\apollo4b\hal\am_hal_pwrctrl.c
*   Introduce am_hal_pwrctrl_control():
    - Enable the XTAL not needed while sleeping option with the new function.
    - Move the setting of the trims for LP until after the setting of the mode.
*   Power optimizations in am_hal_pwrctrl_low_power_init including:
    - Runtime (e.g. Coremark)
    - Deepsleep
    - VDDF adjustment for HP/burst (currently defined with VDD_BOOST_FOR_HP).
    - Implement backout_mcu_mode_select() in case a failure occurs during
    am_hal_pwrctrl_mcu_mode_select().
*   Added the HP/LP SW Workaround
*   Added the CRYPTO block power-down SW Workaround
 
\mcu\apollo4b\hal\am_hal_timer.c
*    Updated TIMER HAL with the proper use of AUXEN:
       a. Clear AUXEN for TIMER.
       b. Change CTRL field values.
       c. Set AUXEN for TIMER.
 
\mcu\apollo4b\hal\am_hal_usb.c
*    Update the CFG0/1/2 register access MACROs
*    Fix anonymous union error (Keil doesn't allow anon unions).
        - These register definitions need to be moved to am_hal_usbregs.h.
*    Corrected all packed 32bit register access issue
*    Fixed the out ep interrupt clearing issue
*    Fixed the potential clearing of the USB INTOUTE status
*    Added return when SetupEnd error case happened
 
\third_party\ThinkSi\config\apollo4b_nemagfx\nema_dc_hal.c
*    Added timeout to nemadc_get_frame_end
*    Added nemadc_get_vsync
*    Changed timeout for wait_vsync to 1 second.
*    Added timing out for GPU and DC waiting IRQ.
*    Added TE functionality.
 
\third_party\tinyusb\src\
* Updated tinyUSB stacks and classes.
 
\third_party\cordio\ble-host\sources\hci\ambiq\cooper\ble_fw_image.h

*    Integrated CEVA rw-ble-sw-v10.0.10
*    Changed the company ID to Ambiq one(0x09AC) both read local version and version exchange over the air
*    Implemented modulation gain interpolation algorithm for both 1M and 2M mode.
 
\third_party\cordio\ble-host\sources\hci\ambiq\cooper\ hci_drv_cooper.h
\third_party\cordio\ble-host\sources\hci\ambiq\cooper\ hci_drv_cooper.c
\devices\am_devices_cooper.h
\devices\am_devices_cooper.c
*    Optimized the scheme to wake up Cooper to avoid storming IOM bus.
*    Disable IRQ interrupt during HCI write to reduce interrupt storming when Cooper has pending packet.

**********************************************************************************************
 
Apollo4 Rev B0/B1 Alpha Release on December 22 2020 (revision b0-release-20201110-564-g8433a2a39)
 
**********************************************************************************************
 
----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\mcu\apollo4b\hal\mcu\am_hal_dsi.*
*    Disabled EoTp.
*    Created DSI napping and wakeup function.
*    Updated DSI power control callback function.
*    Added DSI VDD18 power control callback.
*    Updated DSI ULPS functions.
    
\mcu\apollo4b\hal\mcu\am_hal_card.*
\mcu\apollo4b\hal\mcu\am_hal_sdhc.c
*    Enlarged bus busy wait time for mode switch in debug mode.
*    Added return of AM_HAL_STATUS_FAIL when CMD19&CMD14 fails
*    Added sending of the CMD1 for more than 1sec.
*    Added the missing CMD56 Id
 
\mcu\apollo4b\hal\mcu\am_hal_secure_ota.c
*    Replace am_hal_mram_main_program() to am_hal_mram_main_words_program() in am_hal_ota_add() for 
     Apollo4b to program 1-word OTA descriptor without 4-word multiples check.

**********************************************************************************************

Apollo4 Rev B0 Alpha Release on December 21 2020 (revision b0-release-20201110-544-g79da7b75d)

**********************************************************************************************

----------------------------------------------------------------------------------------------
New Features Since Previous Release
----------------------------------------------------------------------------------------------

Initial support for Apollo4 Rev B1 silicon.
*    Register updates.
*    TIMER HAL updates.
*    RTC Functionality
*    GPU/DC Power down.
*    Power savings.

\tools\apollo4b_scripts\README.txt
*    Documentation on the customer facing scripts used for INFO0, main application, patch
     certificate chain, and SBL updates.
     
\tools\apollo4b_scripts\oem_tools_pkg\README.txt
*    Documentation on OEM Provisioning and Secure Debug Certificate generation.

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\devices\am_devices_mspi_psram_aps12808l.c
*    Reduce DDR PSRAM write latency and improve throughput.
*    Modifed APS12808l driver to speed up the transfer speed.

\devices\am_devices_cooper.c
\devices\am_devices_mb85rs1mt.c
\devices\am_devices_mb85rc256v.c
\devices\am_devices_tpV1p1.c
*    Updates to handle the 5-byte OFFSET API from IOM HAL.

\devices\am_devices_sw_rtc.c
*    Added check for proper HFRC clock selection for STIMER.

\mcu\apollo4b\hal\mcu\am_hal_card.*
\mcu\apollo4b\hal\mcu\am_hal_sdhc.*
\mcu\apollo4b\hal\mcu\am_hal_card_host.*
*    Added the DDR50 and read ext_csd SW workaround.
*    Added eMMC DDR50 calibration function.
*    Added fix for CMD1 retries issue.
*    Added critical protection for asynchronous xfer

\mcu\apollo4b\hal\mcu\am_hal_clkgen.*
*    Deprecated interrupts from CLKGEN HAL in Rev B.

\mcu\apollo4b\hal\am_hal_global.*
*    Updated with legacy am_hal_triple_read() function.

\mcu\apollo4b\hal\mcu\am_hal_mram.*
*    Updated validation checks.

\mcu\apollo4b\hal\mcu\am_hal_mspi.c
*    Started to incorporate custom MSPI SDR timing setting vs. clock frequency.

\mcu\apollo4b\hal\mcu\am_hal_rtc.c
*    Updated RTC HAL to remove setting of 12 vs. 24 hours selection which is deprecated in Rev B1.

\mcu\apollo4b\hal\am_hal_stimer.c
*    Updated am_hal_stimer_config to set the new AUXEN for Rev B1.
*    Updated am_hal_stimer_counter_get to implement a triple read SW workaround for Rev B1.

\mcu\apollo4b\hal\am_hal_timer.*
*    Updated to support SW Workaround to return errors if broken Rev B1 TIMERs are used.


********************************************************************************************

Apollo4 Rev B0 Alpha Release on December 10 2020 (revision b0-release-20201110-399-g4728b5a52)

********************************************************************************************

----------------------------------------------------------------------------------------------
New Features Since Previous Release
----------------------------------------------------------------------------------------------

\third_party\crypto
*    Run-time Crypto HW support.

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\mcu\apollo4b\hal\mcu\am_hal_card.*
\mcu\apollo4b\hal\mcu\am_hal_sdhc.*
\mcu\apollo4b\hal\mcu\am_hal_card_host.*
*    Added the DDR50 and read ext_csd SW workaround.
    
\mcu\apollo4b\hal\mcu\am_hal_iom.*
*    Updated to support the full 5-byte OFFSET (CMD and OFFSETHI registers).

\devices\am_devices_cooper.c
*    Updated to use the IOM HAL changes.

\mcu\apollo4b\hal\mcu\am_hal_dsi.c
*    Updated DSI timing configurations.
*    Fine tune DSI timing.

\mcu\apollo4b\hal\am_hal_gpio.*
*    Condition the drive strength pin table with AM_HAL_DISABLE_API_VALIDATION.
*    Add new GPIO function, am_hal_gpio_pinconfig_get(), for both 4 and 4b.
*    For Apollo4 and Apollo4b, convert drive strength designations from
     "12MA"/"16MA" to the more accurate designations "0P1X"/"0P5X".
     Also support new RevB drive strengths of "0P75X" and "1P0X".
     Finally, deprecate 12MA and 16MA, but support any existing usage with
     defines that equate to the new enums.

\mcu\apollo4b\hal\am_hal_pwrctrl.c
*    Updated PWRCTRL HAL for CRYPTO power-down/power-up SW workaround.

\mcu\apollo4b\hal\mcu\am_hal_utils.c
*    Updated am_hal_delay_us function to support both LP96MHz and HP192MHz test.

********************************************************************************************

Apollo4 Rev B0 Alpha Release on December 4 2020 (revision b0-release-20201110-315-gc8341de26)

********************************************************************************************

----------------------------------------------------------------------------------------------
New Features Since Previous Release
----------------------------------------------------------------------------------------------

SW RTC using STIMER
*    See \devices\am_devices_sw_rtc.* and \boards\apollo4b_eb\examples\peripherals\sw_rtc_print example.

OEM Provisioning Tools
*    See \tools\apollo4b_scripts\oem_tools_pkg

Secure Updates
*    See \tools\apollo4b_scripts

----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\devices\am_devices_mspi_psram_aps12808l.c
*    minor fix to defect in printf.
*    Clean up MSPI DDR code. Add dedicated CE pin for DDR. Change to linear burst mode for DDR read write.
*    Trivial change to display APS12808L read latency code.

\devices\am_devices_cooper.c
*    Disable the modem's DCOC block to eliminate the 2M PER spike issue completely, and reverted previous software AGC solution;
*    Code cleanup and fixed some compiling warnings.

\devices\am_devices_dsi_rm67162.*
*    Modified default DBI bus width to 16, updated graphics examples.
*    Fixed wrong color issue when using at DSI RGB565 mode.
*    Updated DSI driver to fix DSI r/w issue.

\mcu\apollo4b\hal\am_hal_dcu.c
*    Defect fix in get_raw_dcu_mask function

\mcu\apollo4b\hal\am_hal_gpio.*
*    Added API validation to am_hal_gpio_pinconfig.
*    Added am_hal_gpio_intdir_toggle macro.

\mcu\apollo4b\hal\am_hal_i2s.*
*    Added interfaces to I2S HAL: am_hal_i2s_disable, am_hal_i2s_tx_fifo_empty, am_hal_i2s_dma_error.
*    Adjusted clock enable settings.

\mcu\apollo4b\hal\am_hal_pdm.*
*    revised pdm hal enable bit handling
*    revised pdma_clkodiv enumerate to reflect datasheet

\mcu\apollo4b\hal\am_hal_pwrctrl.c
*    Added support for transition to High Performance mode and back to Low Power mode.

\mcu\apollo4\hal\am_hal_stimer.*
*     Add changes to STIMER HAL to support SW RTC feature.

\mcu\apollo4b\hal\am_hal_usb.c
*    add the 'am_hal_usb_xfer_reset(&pState->ep0_xfer)' back
*    added support for the USB charger feature
*    add suspend & resume PHY power saving code

\mcu\apollo4b\hal\mcu\am_hal_card.c
*    Add CMD56 support.
*    Added check if mode switch is successful or not.
*    Add two APIs for eMMC HAL.
*    Fixed API VALIDATION.

\mcu\apollo4b\hal\mcu\am_hal_clkgen.c
*     Updates to support HFADJ for Rev B.

\mcu\apollo4b\hal\mcu\am_hal_dsi.c
*    Updated DSI ULPS functions.
*    Ported the changes in apollo4 dsi hal to apollo4b dsi hal.
*    Modified 16-bit DBI config to opt1.

\mcu\apollo4b\hal\mcu\am_hal_ios.*
*    IOS REGACC related control code enabled for wraparound support.
*    Updated am_hal_ios_control function options for interrupt settings.

\mcu\apollo4b\hal\mcu\am_hal_mram.c
*    Implementation of INFO read/write SW workaround.

\mcu\apollo4b\hal\mcu\am_hal_mspi.c
*    Fixed issue with missing register save/restore in am_hal_mspi_power_control for DEV0DDR & DEV0XIPMISC.

\mcu\apollo4b\hal\mcu\am_hal_reset.*
*    Update reset get HAL to remove dependency from the RTSGET->STAT register.

\mcu\apollo4b\hal\mcu\am_hal_sdhc.c
*    Added cmd and data software reset

\third_party\tinyusb\src\portable\ambiq\apollo4\dcd_apollo4.c
*    added the USB charger and USB HAL changes

********************************************************************************************

Apollo4 Rev B0 Alpha Release on November 10 2020 (revision v2.5.1_apollo4_a2-441-g90f6eda25)

********************************************************************************************

----------------------------------------------------------------------------------------------
New Features Since Previous Release
----------------------------------------------------------------------------------------------

CPU
* 192MHz High Performance operation.

I2S
* Support for 2 instances IIS channels.

MSPI
* Updated support for DDR operation.

SD/SDIO/eMMC
* Support of new block with Arasan's Nex Host stack.

Security Features
* Including ARM Cryptocell HW acceleration.

\mcu\apollo4b\hal\am_hal_dcu.c
\mcu\apollo4b\hal\am_hal_dcu.h
* New HAL to allow configuration of the Debug Control Unit (DCU).


----------------------------------------------------------------------------------------------
Software Known Issues, Updates, and Defect Fixes
----------------------------------------------------------------------------------------------

\devices\am_devices_cooper.c
* Add support to production Cooper SBL
* Support for version rollback enable feature.
* Some additional error handling in FW update flow.
* Updated to Cooper FW V1.10.0
    1.	Fixed an issue of not generating signal for FCC's "Continuous Wave" test;
    2.	Lowered PLL bandwidth and adjusted register setting for 0dBm transmit power to improve DTM DF2 99.9%.
* Changes included from Cooper FW V1.9.0
    1.	Introduced production Cooper SBL;
    2.	Added VSC command to get 32K clock frequency;
    3.	Added info0 field to protect Cooper memory/register write;
    4.	Enabled AGC and adjusted parameters to fix the -75dBm spike issue and optimize the RX sensitivity;
    5.	Corrected wrong SLEEPEMCR definitions.

\devices\am_devices_dsi_rm67162.c
* Fixed a bug with driver error return in the am_devices_dsi_rm67162_init function.

\devices\am_devices_nemadc_rm67162.c
* Moved display configurations to BSP, modified macros RESX and RESY to FB_RESX and FB_RESY.

\devices\am_devices_mspi_psram_aps12808l.c
* Support for MSPI DDR testing on FPGA and Rev B0 silicon.

\mcu\apollo4b\hal\mcu\am_hal_clkgen.c
* Deprecated RSTGEN->STATUS usage which is handled by the SBR/SBL.

\mcu\apollo4b\hal\mcu\am_hal_dsi.c
\mcu\apollo4b\hal\mcu\am_hal_dsi.h
* Modified 16-bit DBI config to OPT1.
* Added DSI clock lane and DBI data width configuration.

\mcu\apollo4b\hal\mcu\am_hal_iom.h
* Set maximum IOM clock speed to 48MHz.

\mcu\apollo4b\hal\mcu\am_hal_ios.c
\mcu\apollo4b\hal\mcu\am_hal_ios.h
* Updated for new WRAPPTR configuration.

\mcu\apollo4b\hal\mcu\am_hal_mcuctrl.c
\mcu\apollo4b\hal\mcu\am_hal_mcuctrl.h
* Correct the setting to generate 32768 clock in am_hal_mcuctrl_control function.
* Updated macros to distinguish Rev A and B0.
* Removed code to distinguish between Rev A0 and A1 parts.

\mcu\apollo4b\hal\mcu\am_hal_mram.c
\mcu\apollo4b\hal\mcu\am_hal_mram.h
* SW workaround for INFO0/1 Read/Write issue with Rev B0.
* Defines new am_hal_mram_info_read function.

\mcu\apollo4b\hal\mcu\am_hal_mspi.c
\mcu\apollo4b\hal\mcu\am_hal_mspi.h
* Updated the PADOUTEN definitions for the OCTAL device configurations.
* Added support to configure the MSPI0_DEV0XIP_XIPWRITELATENCY0 register.
* Added support for misc. configuration (AM_HAL_MSPI_REQ_XIP_MISC_CONFIG) in am_hal_mspi_control function.

\mcu\apollo4b\hal\am_hal_otp.c
* Added error checking in am_hal_otp_read_word and am_hal_otp_write_word functions.

\mcu\apollo4b\hal\am_hal_pdm.c
\mcu\apollo4b\hal\am_hal_pdm.h
* Register configuration changes to support Rev B0.
* Adjusted PDM clock parameters for Rev B0.

\mcu\apollo4b\hal\mcu\am_hal_reset.c
\mcu\apollo4b\hal\mcu\am_hal_reset.h
* Deprecated clearing of RSTGEN->STATUS which is handled by SBR/SBL.

\mcu\apollo4b\hal\mcu\am_hal_secure_ota.h
* Updates the interface for new "magic" numbers and status values.

\mcu\apollo4b\hal\am_hal_security.c
\mcu\apollo4b\hal\am_hal_security.h
* Expanded am_hal_security_info_t for Rev B0.
*  Added get_socid function.

\mcu\apollo4b\hal\am_hal_usb.c
\mcu\apollo4b\hal\am_hal_usb.h
* Removal of the USB 4-byte SW workaround for Rev A.
* Incorporated changes from Alpha customer feedback.
* Fixed an issue with improper handling of EP0 transfer reset.
* Deprecated configuration of number of DMA channels.

\mcu\apollo4b\regs\am_mcu_apollo4b_info0.h
* Updates to reflect the latest INFO0 changes.

\mcu\apollo4b\regs\am_mcu_apollo4b_otp.h
* Updates to reflect the latest OTP memory definitions.

\third_party\cordio\ble-host\cordio_stack_readme.md and third_party\cordio\ble-profiles\cordio_profile_readme.md
* Update the information for Open source Cordio stack and profile on which Ambiqsuite is based; 

\third_party\cordio\ble-profiles\sources\apps\app\app_master.c
* Fix BLESA vulenarability when device working as master role. (refer to https://www.zdnet.com/article/billions-of-devices-vulnerable-to-new-blesa-bluetooth-security-flaw/)

\third_party\cordio\ble-host\sources\hci\ambiq\cooper\ble_fw_image.h
* integrate Cooper firmware v1.10 for Apollo4 RevA and RevB; 

\third_party\cordio\ble-host\sources\hci\ambiq\cooper\hci_drv_cooper.c
\third_party\cordio\ble-host\sources\hci\ambiq\cooper\hci_drv_cooper.h
* Deprecated HciVscBleSleepSet command. Not needed anymore, since Cooper fw v1.8 or later 
will disable sleep automatically when entering radio test mode (DTM, FCC); 
* Set transmit test data length to 0x25 by default for DTM TX test cases.
* Change DTM transmitter and receiver testing V3 command APIs to expose all parameters.
* Remove Bluetooth address field from NVDS parameters.
* Correct wrong command structure of hciWrFlashCmd_t; 
* Add 32k source setting to NVDS parameter; 

\third_party\cordio\ble-host\sources\stack\dm\dm_dev.c
* Clear dmCb.resetting flag before acting resetting if previous reset still in progress; 

\third_party\cordio\ble-host\sources\stack\smp\smp_main.c
* Fix 0xE1 SMP error when AES token mismatches.

\ third_party\cordio\ble-host\sources\stack\smp\smp_sc_act.c
* Fix the issue where LE secure connection is not authentically established when there's no IO CAP on either side.

----------------------------------------------------------------------------------------------
Known Sightings
----------------------------------------------------------------------------------------------

These are issues to watch out for on the early Rev B0 samples.

GPU
* The GPU hangs while processing a Command List executing in Shared SRAM.
* Image artifacts (zigzag/sawteeth) appear on object boarders.

DSI
* Image artifacts are observed when using the DSI interface to a display.

IOM
* STATUS register does not return to IDLEST after a blocking I2C transaction.

MRAM
* INFOspace (0/1) reads and writes do not work correctly.  SW workaround included in SDK.

MSPI
* Transactions fail at clock speeds above 16MHz.
* DDR does not function on MSPI instance 2.

IIS
* Receive DMA duplicates samples in SRAM

IOS
* Data loss at CLK frequencies above 1MHz.









